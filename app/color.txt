hsb.h = parseFloat(document.getElementsByName("color")[0].value);
    hsb.a = parseInt(document.getElementsByName("alpha")[0].value)/100;
    hsb.hover = sb.canvas.offsetLeft <= mouse.x && sb.canvas.offsetLeft+sb.canvas.width >= mouse.x &&
    sb.canvas.offsetTop <= mouse.y && sb.canvas.offsetTop+sb.canvas.height >= mouse.y;

    hsb.areaHover = (x, y, width, height) => {
        return (mouse.x-sb.canvas.offsetLeft >= x && mouse.x-sb.canvas.offsetLeft <= x+width &&
        mouse.y-sb.canvas.offsetTop >= y && mouse.y-sb.canvas.offsetTop <= y+height);
    }


    if (!hsb.hover) {hsb.hold = false};
    if (hsb.hold && hsb.areaHover(20, 0, 100, 100)) {
        if (mouse.x-sb.canvas.offsetLeft <= 120 && mouse.x-sb.canvas.offsetLeft >= 20) {hsb.s = mouse.x-sb.canvas.offsetLeft-20};
        if (mouse.y-sb.canvas.offsetTop <= 100 && mouse.y-sb.canvas.offsetTop >= 0) {hsb.b = mouse.y-sb.canvas.offsetTop};
    }
    sb.clearAll();
    sb.fillArea(HSBtoRGB({h: hsb.h, s: 100, b: 100}).str, 0, 0, 100, 100);
    sb.drawTexture("color_background.png", 0, 0, 100, 100);
    let rgb = HSBtoRGB(hsb).json;
    rgb = "rgb("+rgb.r+", "+rgb.g+", "+rgb.b+")";

    //document.getElementById("alpha").style.background = "linear-gradient("+rgb+", transparent)";
    
    let invert = HSBtoRGB(hsb).json;
    invert.r = 255-invert.r;
    invert.g = 255-invert.g;
    invert.b = 255-invert.b;
    invert = "rgb("+invert.r+","+invert.g+","+invert.b+")";
    sb.circle(invert, hsb.s, hsb.b, 5);
    sb.drawTexture("alpha.png", 0, 100, 100, 20);
    sb.fillArea(HSBtoRGB(hsb).str, 0, 100, 100, 15);

    //document.getElementById("rgbDisplay").innerHTML = HSBtoRGB(hsb);